package mekanism.common;

import mekanism.client.lang.MekanismLangProvider;
import mekanism.client.model.MekanismItemModelProvider;
import mekanism.client.sound.MekanismSoundProvider;
import mekanism.client.state.MekanismBlockStateProvider;
import mekanism.common.biome_modifier.MekanismBiomeModifierProvider;
import mekanism.client.texture.PrideRobitTextureProvider;
import mekanism.common.loot.MekanismLootProvider;
import mekanism.common.recipe.impl.MekanismRecipeProvider;
import mekanism.common.tag.MekanismTagProvider;
import net.minecraft.data.DataGenerator;
import net.minecraftforge.common.data.ExistingFileHelper;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod.EventBusSubscriber;
import net.minecraftforge.fml.common.Mod.EventBusSubscriber.Bus;
import net.minecraftforge.forge.event.lifecycle.GatherDataEvent;

@EventBusSubscriber(modid = Mekanism.MODID, bus = Bus.MOD)
public class MekanismDataGenerator {

    private MekanismDataGenerator() {
    }

    @SubscribeEvent
    public static void gatherData(GatherDataEvent event) {
        DataGenerator gen = event.getGenerator();
        ExistingFileHelper existingFileHelper = event.getExistingFileHelper();
        //Client side data generators
        gen.addProvider(event.includeClient(), new MekanismLangProvider(gen));
        gen.addProvider(event.includeClient(), new PrideRobitTextureProvider(gen, existingFileHelper));
        gen.addProvider(event.includeClient(), new MekanismSoundProvider(gen, existingFileHelper));
        //Let the blockstate provider see models generated by the item model provider
        MekanismItemModelProvider itemModelProvider = new MekanismItemModelProvider(gen, existingFileHelper);
        gen.addProvider(event.includeClient(), itemModelProvider);
        gen.addProvider(event.includeClient(), new MekanismBlockStateProvider(gen, itemModelProvider.existingFileHelper));
        //Server side data generators
        gen.addProvider(event.includeServer(), new MekanismTagProvider(gen, existingFileHelper));
        gen.addProvider(event.includeServer(), new MekanismLootProvider(gen));
        gen.addProvider(event.includeServer(), new MekanismBiomeModifierProvider(gen));
        gen.addProvider(event.includeServer(), new MekanismRecipeProvider(gen, existingFileHelper));
        //TODO - 1.19: Re-enable when ProjectE updates and then disable it in the persisting data providers
        //gen.addProvider(event.includeServer(), new MekanismCustomConversions(gen));
        //TODO - 1.19: Re-enable when CrT updates and then disable it in the persisting data providers
        //gen.addProvider(event.includeServer(), new MekanismCrTExampleProvider(gen, existingFileHelper));
        //Data generator to help with persisting data when porting across MC versions when optional deps aren't updated yet
        gen.addProvider(true, new PersistingDisabledProvidersProvider(gen));
    }
}
